// GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag

package docs

import (
	"bytes"
	"encoding/json"
	"strings"

	"github.com/alecthomas/template"
	"github.com/swaggo/swag"
)

var doc = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{.Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/academic_years": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Get academic years",
                "parameters": [
                    {
                        "type": "string",
                        "description": "token",
                        "name": "Token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Service Name",
                        "name": "Service",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Request body",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.AcademicYearsRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.AcademicYearsPayload"
                        }
                    }
                }
            }
        },
        "/courses": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Get group courses",
                "parameters": [
                    {
                        "type": "string",
                        "description": "token",
                        "name": "Token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Service Name",
                        "name": "Service",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Request body",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.GroupCoursesRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.GroupCoursesPayload"
                        }
                    }
                }
            }
        },
        "/faculties": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Get user faculties, specialities, years and groups",
                "parameters": [
                    {
                        "type": "string",
                        "description": "token",
                        "name": "Token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Service Name",
                        "name": "Service",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Request body",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.FacultiesRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.MainFilterPayload"
                        }
                    }
                }
            }
        },
        "/ping": {
            "post": {
                "description": "ping server",
                "summary": "ping",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.Response"
                        }
                    }
                }
            }
        },
        "/point_journal/get": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Get poins journal",
                "parameters": [
                    {
                        "type": "string",
                        "description": "token",
                        "name": "Token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Service Name",
                        "name": "Service",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Request body",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.GetPointsJournalRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.PointJournal"
                        }
                    }
                }
            }
        },
        "/tokenize": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Tokenize user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "token",
                        "name": "Token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Service Name",
                        "name": "Service",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Request body",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.TokenizeRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.TokenizePayload"
                        }
                    }
                }
            }
        },
        "/untokenize": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Delete user token",
                "parameters": [
                    {
                        "type": "string",
                        "description": "token",
                        "name": "Token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Service Name",
                        "name": "Service",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Request body",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.DeleteTokenRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.Response"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "dto.AcademicYearsPayload": {
            "type": "object",
            "properties": {
                "academicYears": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "dto.AcademicYearsRequest": {
            "type": "object",
            "properties": {
                "externalRef": {
                    "type": "string"
                },
                "serviceName": {
                    "type": "string"
                },
                "userUchprocCode": {
                    "type": "integer"
                }
            }
        },
        "dto.Course": {
            "type": "object",
            "properties": {
                "attendance_id": {
                    "type": "integer"
                },
                "course_name": {
                    "type": "string"
                },
                "credits_count": {
                    "type": "string"
                },
                "group_id": {
                    "type": "integer"
                },
                "is_assistant": {
                    "type": "boolean"
                },
                "point_id": {
                    "type": "integer"
                },
                "start_date": {
                    "type": "string"
                },
                "teacher_name": {
                    "type": "string"
                }
            }
        },
        "dto.DeleteTokenRequest": {
            "type": "object",
            "properties": {
                "externalRef": {
                    "type": "string"
                },
                "serviceName": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                }
            }
        },
        "dto.FacultiesRequest": {
            "type": "object",
            "properties": {
                "academicYear": {
                    "type": "string"
                },
                "externalRef": {
                    "type": "string"
                },
                "serviceName": {
                    "type": "string"
                }
            }
        },
        "dto.Faculty": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "specialties": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.Speciality"
                    }
                }
            }
        },
        "dto.GetPointsJournalRequest": {
            "type": "object",
            "properties": {
                "course_id": {
                    "type": "integer"
                },
                "externalRef": {
                    "type": "string"
                },
                "serviceName": {
                    "type": "string"
                },
                "userUchprocCode": {
                    "type": "integer"
                }
            }
        },
        "dto.Group": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                }
            }
        },
        "dto.GroupCoursesPayload": {
            "type": "object",
            "properties": {
                "courses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.Course"
                    }
                }
            }
        },
        "dto.GroupCoursesRequest": {
            "type": "object",
            "properties": {
                "externalRef": {
                    "type": "string"
                },
                "groupId": {
                    "type": "integer"
                },
                "serviceName": {
                    "type": "string"
                },
                "userUchprocCode": {
                    "type": "integer"
                }
            }
        },
        "dto.LoginPass": {
            "type": "object",
            "properties": {
                "login": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "dto.MainFilterPayload": {
            "type": "object",
            "properties": {
                "faculties": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.Faculty"
                    }
                }
            }
        },
        "dto.PointJournal": {
            "type": "object",
            "properties": {
                "current_week": {
                    "type": "integer"
                },
                "max_point": {
                    "type": "integer"
                },
                "points": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.StudentPoint"
                    }
                },
                "weeks_number": {
                    "type": "integer"
                }
            }
        },
        "dto.Response": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                },
                "payload": {
                    "type": "object"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "dto.Speciality": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "years": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.Year"
                    }
                }
            }
        },
        "dto.StudentPoint": {
            "type": "object",
            "properties": {
                "grade": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "points_sum": {
                    "type": "number"
                },
                "record_book": {
                    "type": "string"
                },
                "week_points": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.WeekPoint"
                    }
                }
            }
        },
        "dto.TokenizePayload": {
            "type": "object",
            "properties": {
                "expireAt": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                }
            }
        },
        "dto.TokenizeRequest": {
            "type": "object",
            "properties": {
                "externalRef": {
                    "type": "string"
                },
                "loginPass": {
                    "$ref": "#/definitions/dto.LoginPass"
                },
                "serviceName": {
                    "type": "string"
                }
            }
        },
        "dto.WeekPoint": {
            "type": "object",
            "properties": {
                "editable": {
                    "type": "boolean"
                },
                "point": {
                    "type": "number"
                },
                "week_number": {
                    "type": "integer"
                }
            }
        },
        "dto.Year": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "groups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.Group"
                    }
                },
                "id": {
                    "type": "integer"
                }
            }
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Schemes     []string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = swaggerInfo{
	Version:     "",
	Host:        "",
	BasePath:    "",
	Schemes:     []string{"http"},
	Title:       "API",
	Description: "",
}

type s struct{}

func (s *s) ReadDoc() string {
	sInfo := SwaggerInfo
	sInfo.Description = strings.Replace(sInfo.Description, "\n", "\\n", -1)

	t, err := template.New("swagger_info").Funcs(template.FuncMap{
		"marshal": func(v interface{}) string {
			a, _ := json.Marshal(v)
			return string(a)
		},
	}).Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, sInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register(swag.Name, &s{})
}
